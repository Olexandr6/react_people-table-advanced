{"version":3,"sources":["Components/Header/Header.tsx","Components/HomePage/HomePage.tsx","Components/PersonRow/PersonRow.tsx","Components/PeopleTable/PeopleTable.tsx","api/people.ts","Components/PeopleContext/PeopleContext.tsx","Components/PeoplePage/PeoplePage.tsx","Components/NewPerson/NewPerson.tsx","App.tsx","index.tsx"],"names":["Header","React","memo","className","isActive","classNames","active","to","HomePage","PersonRow","person","mother","father","match","useMatch","selectedPerson","params","slug","location","useLocation","person__selected","pathname","search","person__male","sex","person__female","name","born","died","motherName","fatherName","PeopleTable","people","useSearchParams","searchParams","setSearchParams","query","get","sortBy","sortOrder","handleSortChange","event","value","currentTarget","textContent","toLowerCase","findParent","find","onClick","map","getPeople","a","fetch","response","json","PeopleContext","createContext","setPeople","PeopleProvider","children","useState","useEffect","then","peopleFromServer","contextValue","Provider","PeoplePage","useContext","appliedQuery","inputQuery","setInputQuery","navigate","useNavigate","filterPeople","lowerQuery","filter","includes","applyQuery","useCallback","debounce","type","placeholder","onChange","target","sort","firsPerson","secondPerson","localeCompare","Number","sortTable","NewPerson","setName","setSex","setBorn","setDied","setFatherName","setMotherName","emptyNameError","setEmptyNameError","invalidNameError","setInvalidNameError","lifePeriodError","setLifePeriodError","nameValidation","getFilteredPeople","peopleSex","childBornYear","onSubmit","preventDefault","split","join","newPerson","onBlur","length","onEmptyNameError","test","required","checked","min","max","Date","getFullYear","disabled","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aff2ec0e.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const Header: React.FC = React.memo(() => {\n  return (\n    <ul className=\"nav nav-tabs justify-content-center\">\n      <li className=\"nav-item\">\n        <NavLink\n          className={({ isActive }) => (classNames(\n            'nav-link',\n            {\n              active: isActive,\n            },\n          ))}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n      </li>\n\n      <li className=\"nav-item\">\n        <NavLink\n          className={({ isActive }) => (classNames(\n            'nav-link',\n            {\n              active: isActive,\n            },\n          ))}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </li>\n    </ul>\n  );\n});\n","import React from 'react';\nimport './HomePage.scss';\n\nexport const HomePage: React.FC = React.memo(() => {\n  return (\n    <h1 className=\"title\">Home page</h1>\n  );\n});\n","import React from 'react';\nimport { NavLink, useLocation, useMatch } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../Types/Person';\nimport './PersonRow.scss';\n\ntype Props = {\n  person: Person,\n  mother: Person | undefined,\n  father: Person | undefined,\n};\n\nexport const PersonRow: React.FC<Props> = React.memo(({\n  person,\n  mother,\n  father,\n}) => {\n  const match = useMatch('/people/:slug');\n  const selectedPerson = match?.params.slug;\n  const location = useLocation();\n\n  return (\n    <tr className={classNames(\n      'person',\n      {\n        person__selected: selectedPerson === person.slug,\n      },\n    )}\n    >\n      <td>\n        <NavLink\n          to={{\n            pathname: `/people/${person.slug}`,\n            search: location.search,\n          }}\n          className={classNames(\n            'person',\n            {\n              person__male: person.sex === 'm',\n              person__female: person.sex === 'f',\n            },\n          )}\n        >\n          {person.name}\n        </NavLink>\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {mother ? (\n          <NavLink\n            to={{\n              pathname: `/people/${person.slug}`,\n              search: location.search,\n            }}\n            className={classNames(\n              {\n                person__male: person.sex === 'm',\n                person__female: person.sex === 'f',\n              },\n            )}\n          >\n            {mother.name}\n          </NavLink>\n        ) : (\n          <span className=\"person__parent\">{person.motherName}</span>\n        )}\n      </td>\n      <td>\n        {father ? (\n          <NavLink\n            to={{\n              pathname: `/people/${person.slug}`,\n              search: location.search,\n            }}\n            className={classNames(\n              {\n                person__male: person.sex === 'm',\n                person__female: person.sex === 'f',\n              },\n            )}\n          >\n            {father.name}\n          </NavLink>\n        ) : (\n          <span className=\"person__parent\">{person.fatherName}</span>\n        )}\n      </td>\n    </tr>\n  );\n});\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../Types/Person';\nimport { PersonRow } from '../PersonRow';\nimport './PeopleTable.scss';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = React.memo(({ people }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n\n  const handleSortChange = (event: React.MouseEvent) => {\n    const value = event.currentTarget.textContent?.toLowerCase();\n\n    if (value && sortOrder === '') {\n      setSearchParams({ query, sortBy: value, sortOrder: 'asc' });\n    }\n\n    if (value && sortOrder === 'desc') {\n      setSearchParams({ query, sortBy: value, sortOrder: 'asc' });\n    }\n\n    if (value && sortOrder === 'asc') {\n      setSearchParams({ query, sortBy: value, sortOrder: 'desc' });\n    }\n  };\n\n  const findParent = (name: string): Person | undefined => {\n    return people.find(person => person.name === name);\n  };\n\n  return (\n    <table className=\"table table-hover\">\n      <thead>\n        <tr>\n          <th\n            onClick={handleSortChange}\n            className={classNames(\n              'table__sort',\n              {\n                'table__sort--asc': sortBy === 'name' && sortOrder === 'asc',\n                'table__sort--desc': sortBy === 'name' && sortOrder === 'desc',\n              },\n            )}\n          >\n            Name\n          </th>\n          <th\n            onClick={handleSortChange}\n            className={classNames(\n              'table__sort',\n              {\n                'table__sort--asc': sortBy === 'sex' && sortOrder === 'asc',\n                'table__sort--desc': sortBy === 'sex' && sortOrder === 'desc',\n              },\n            )}\n          >\n            Sex\n          </th>\n          <th\n            onClick={handleSortChange}\n            className={classNames(\n              'table__sort',\n              {\n                'table__sort--asc': sortBy === 'born' && sortOrder === 'asc',\n                'table__sort--desc': sortBy === 'born' && sortOrder === 'desc',\n              },\n            )}\n          >\n            Born\n          </th>\n          <th\n            onClick={handleSortChange}\n            className={classNames(\n              'table__sort',\n              {\n                'table__sort--asc': sortBy === 'died' && sortOrder === 'asc',\n                'table__sort--desc': sortBy === 'died' && sortOrder === 'desc',\n              },\n            )}\n          >\n            Died\n          </th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonRow\n            key={person.slug}\n            person={person}\n            father={findParent(person.fatherName)}\n            mother={findParent(person.motherName)}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import { Person } from '../Types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async (): Promise<Person[]> => {\n  const response = await fetch(API_URL);\n\n  return response.json();\n};\n","import React, { useEffect, useState } from 'react';\nimport { Person } from '../../Types/Person';\nimport { getPeople } from '../../api/people';\n\ntype ContextProps = {\n  people: Person[]\n  setPeople: (items: Person[]) => void,\n};\n\nexport const PeopleContext = React.createContext<ContextProps>({\n  people: [],\n  setPeople: () => {},\n});\n\nexport const PeopleProvider: React.FC = ({ children }) => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    getPeople()\n      .then(peopleFromServer => setPeople(peopleFromServer));\n  }, []);\n\n  const contextValue = {\n    people,\n    setPeople,\n  };\n\n  return (\n    <PeopleContext.Provider value={contextValue}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","import React, { useCallback, useContext, useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { PeopleTable } from '../PeopleTable';\nimport { PeopleContext } from '../PeopleContext';\nimport './PeoplePage.scss';\n\nexport const PeoplePage: React.FC = React.memo(() => {\n  const { people } = useContext(PeopleContext);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n  const appliedQuery = searchParams.get('query') || '';\n  const [inputQuery, setInputQuery] = useState(appliedQuery);\n  const navigate = useNavigate();\n\n  const filterPeople = () => {\n    const lowerQuery = appliedQuery?.toLowerCase();\n\n    if (lowerQuery) {\n      return people.filter(person => (\n        person.name.toLowerCase().includes(lowerQuery)\n        || person.motherName?.toLowerCase().includes(lowerQuery)\n        || person.fatherName?.toLowerCase().includes(lowerQuery)\n      ));\n    }\n\n    return people;\n  };\n\n  const sortTable = () => {\n    switch (sortBy) {\n      case 'name':\n      case 'sex':\n        return filterPeople().sort((firsPerson, secondPerson) => (\n          sortOrder === 'asc'\n            ? firsPerson[sortBy].localeCompare(secondPerson[sortBy])\n            : secondPerson[sortBy].localeCompare(firsPerson[sortBy])\n\n        ));\n\n      case 'born':\n      case 'died':\n        return filterPeople().sort((firsPerson, secondPerson) => (\n          sortOrder === 'asc'\n            ? Number(firsPerson[sortBy]) - Number(secondPerson[sortBy])\n            : Number(secondPerson[sortBy]) - Number(firsPerson[sortBy])\n        ));\n\n      default:\n        return filterPeople();\n    }\n  };\n\n  const applyQuery = useCallback(\n    debounce((query) => {\n      if (query || sortBy || sortOrder) {\n        setSearchParams({ query, sortBy, sortOrder });\n      } else {\n        setSearchParams({});\n      }\n    }, 500),\n    [setSearchParams, sortBy, sortOrder],\n  );\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    applyQuery(event.target.value.toLowerCase());\n    setInputQuery(event.target.value);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"inputs\">\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          data-cy=\"filterInput\"\n          placeholder=\"Enter person name\"\n          value={inputQuery || ''}\n          onChange={handleQueryChange}\n        />\n\n        <button\n          className=\"btn btn-outline-info\"\n          type=\"button\"\n          onClick={() => navigate('/people/new')}\n        >\n          Add a new person\n        </button>\n      </div>\n\n      <PeopleTable people={sortTable()} />\n    </div>\n  );\n});\n","import React, {\n  FormEvent, useContext, useEffect, useState,\n} from 'react';\nimport './NewPerson.scss';\nimport { useNavigate } from 'react-router-dom';\nimport { PeopleContext } from '../PeopleContext';\nimport { Person } from '../../Types/Person';\n\nexport const NewPerson: React.FC = React.memo(() => {\n  const { people, setPeople } = useContext(PeopleContext);\n  const [name, setName] = useState('');\n  const [sex, setSex] = useState('');\n  const [born, setBorn] = useState(0);\n  const [died, setDied] = useState(0);\n  const [fatherName, setFatherName] = useState('');\n  const [motherName, setMotherName] = useState('');\n  const [emptyNameError, setEmptyNameError] = useState(false);\n  const [invalidNameError, setInvalidNameError] = useState(false);\n  const [lifePeriodError, setLifePeriodError] = useState(false);\n  const navigate = useNavigate();\n\n  const nameValidation = /^[a-zA-Z ]{3,30}$/;\n\n  useEffect(() => {\n    if (died && born) {\n      setLifePeriodError(died - born >= 150);\n    }\n  }, [born, died]);\n\n  const onEmptyNameError = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setEmptyNameError(!value.length);\n  };\n\n  const onInvalidNameError = () => {\n    setInvalidNameError(name.length > 0 && !nameValidation.test(name));\n  };\n\n  const getFilteredPeople = (peopleSex: string, childBornYear = 1400) => {\n    return people.filter(person => person.sex === peopleSex\n      && person.born <= childBornYear - 18\n      && person.died >= childBornYear + 1);\n  };\n\n  const clearForm = () => {\n    setName('');\n    setSex('');\n    setBorn(0);\n    setDied(0);\n    setFatherName('');\n    setMotherName('');\n  };\n\n  const onFormSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    const slug = `${name.split(' ').join('-')}-${born}`;\n\n    const newPerson: Person = {\n      name,\n      sex,\n      born,\n      died,\n      fatherName,\n      motherName,\n      slug,\n    };\n\n    setPeople([...people, newPerson]);\n    clearForm();\n    navigate('/people/');\n  };\n\n  return (\n    <div className=\"container\">\n      <form className=\"form\" onSubmit={onFormSubmit}>\n        <label className=\"form__field\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={(event) => {\n              setName(event.target.value);\n              setEmptyNameError(false);\n            }}\n            onBlur={(event) => {\n              onEmptyNameError(event);\n              onInvalidNameError();\n            }}\n          />\n\n          {emptyNameError && (\n            <span className=\"form__error\">\n              Name field if required\n            </span>\n          )}\n\n          {invalidNameError && (\n            <span className=\"form__error\">\n              The name can contain only letters and spaces\n              and be between 3 and 30 characters long\n            </span>\n          )}\n        </label>\n\n        <label className=\"form__radio\">\n          Male\n          <input\n            required\n            type=\"radio\"\n            name=\"sex\"\n            value=\"m\"\n            checked={sex === 'm'}\n            onChange={(event) => setSex(event.target.value)}\n            className=\"form-check-input mt-0\"\n          />\n        </label>\n\n        <label className=\"form__radio\">\n          Female\n          <input\n            required\n            type=\"radio\"\n            name=\"sex\"\n            value=\"f\"\n            checked={sex === 'f'}\n            onChange={(event) => setSex(event.target.value)}\n            className=\"form-check-input mt-0\"\n          />\n        </label>\n\n        <label className=\"form__field\">\n          <input\n            type=\"number\"\n            placeholder=\"Born year\"\n            value={born}\n            min={1400}\n            max={new Date().getFullYear()}\n            onChange={(event) => setBorn(Number(event.target.value))}\n            className=\"form-control\"\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"number\"\n            placeholder=\"Death year\"\n            disabled={!born}\n            value={died}\n            min={born}\n            max={new Date().getFullYear()}\n            onChange={(event) => setDied(Number(event.target.value))}\n            className=\"form-control\"\n          />\n          {lifePeriodError && (\n            <span className=\"form__error\">\n              The life period of a person should be less than 150 years\n            </span>\n          )}\n        </label>\n\n        <label>\n          <select\n            disabled={!born}\n            value={fatherName}\n            onChange={event => setFatherName(event.target.value)}\n            className=\"form-select\"\n          >\n            <option value=\"\" disabled>Choose a father</option>\n            {getFilteredPeople('m', born).map(person => (\n              <option\n                key={person.slug}\n                value={person.name}\n              >\n                {person.name}\n              </option>\n            ))}\n          </select>\n        </label>\n\n        <label>\n          <select\n            disabled={!born}\n            value={motherName}\n            onChange={event => setMotherName(event.target.value)}\n            className=\"form-select\"\n          >\n            <option value=\"\" disabled>Choose a mother</option>\n            {getFilteredPeople('f', born).map(person => (\n              <option\n                key={person.slug}\n                value={person.name}\n              >\n                {person.name}\n              </option>\n            ))}\n          </select>\n        </label>\n\n        <button className=\"btn btn-outline-success\" type=\"submit\">\n          Add a new person\n        </button>\n      </form>\n    </div>\n  );\n});\n","import React from 'react';\nimport './App.scss';\nimport { Route, Routes } from 'react-router-dom';\nimport { Header } from './Components/Header';\nimport { HomePage } from './Components/HomePage';\nimport { PeoplePage } from './Components/PeoplePage';\nimport { NewPerson } from './Components/NewPerson';\nimport { PeopleProvider } from './Components/PeopleContext';\n\nexport const App: React.FC = () => {\n  return (\n    <PeopleProvider>\n      <div className=\"App\">\n        <Header />\n\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/people\" element={<PeoplePage />} />\n          <Route path=\"/people/:slug\" element={<PeoplePage />} />\n          <Route path=\"/people/new\" element={<NewPerson />} />\n          <Route path=\"*\" element={<h1>Error 404: Page not found</h1>} />\n        </Routes>\n      </div>\n    </PeopleProvider>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}